HackerRank Day1: Data Type.

Problem:
given interger i, double d, and string s;

Input Format 
The first line contains an integer, j. 
The second line contains a double, e. 
The third line contains a string, p.

Output Format
Print the sum of both integers on the first line, 
the sum of both doubles (scaled to 1 decimal place) on the second line, 
and then the two concatenated strings on the third line.

Code:
"
// Declare second integer, double, and String variables.
    int j;
    double e;
    string p;
    // Read and save an integer, double, and String to your variables.
    std::cin>>j;
    std::cin>>e;
    std::cin.ignore();
    std::getline(std::cin, p);
    // Print the sum of both integer variables on a new line.
    std::cout << i + j<<"\n";
    // Print the sum of the double variables on a new line.
    std::cout<<std::fixed<<std::setprecision(1) <<d+e<<"\n";
    // Concatenate and print the String variables on a new line
    // The 's' variable above should be printed first.
    std::cout<<s+p<<"\n";
"

Things Learned:
1. set the output number scaled to n decimal place:
  std::cout << std::fixed << std::setprecision(n) << number <<"\n";
2. getline 
  if have other previous input, before use getline to get a string s, first delete the end of the previous line '\n'
  std::cin.ignore();
  then, 
  string s;
  std::getline(std::cin, s);
Others' comment:
"Using cin leaves an end of line character which is then read by your getline(); It is best not to mix different types of input."
